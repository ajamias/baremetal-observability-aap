# This assumes that there already exists a secret called "ipmi-exporter-config"
# Example config: https://github.com/prometheus-community/ipmi_exporter/blob/master/ipmi_remote.yml

- name: Create IPMI exporter config
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: ipmi-exporter-config
        namespace: "{{ baremetal_observability_namespace }}"
      type: Opaque
      data:
        ipmi-exporter-config.yaml: "{{ lookup('file', 'ipmi-exporter-config.yaml') | b64encode }}"

- name: Deploy IPMI exporter
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: ipmi-exporter
        namespace: "{{ baremetal_observability_namespace }}"
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: ipmi-exporter
        template:
          metadata:
            labels:
              app: ipmi-exporter
          spec:
            containers:
              - name: ipmi-exporter
                image: quay.io/prometheuscommunity/ipmi-exporter:latest
                args:
                  - "--config.file=/config/ipmi-exporter-config.yaml"
                ports:
                  - containerPort: 9290
                    name: ipmi-metrics
                volumeMounts:
                  - name: ipmi-exporter-config
                    mountPath: /config
            volumes:
              - name: ipmi-exporter-config
                secret:
                  secretName: ipmi-exporter-config

- name: Create IPMI exporter service
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: ipmi-exporter
        namespace: "{{ baremetal_observability_namespace }}"
        labels:
          app: ipmi-exporter
      spec:
        selector:
          app: ipmi-exporter
        ports:
          - name: http
            port: 9290
            targetPort: ipmi-metrics

# - name: Build ServiceMonitor endpoints
#   ansible.builtin.set_fact:
#     servicemonitor_endpoints: []
#
# - name: Add endpoint for each IPMI BMC endpoint
#   ansible.builtin.set_fact:
#     servicemonitor_endpoints: "{{ servicemonitor_endpoints + [new_endpoint] }}"
#   vars:
#     new_endpoint:
#       port: http
#       path: /ipmi
#       interval: "{{ baremetal_observability_default_scrape_interval }}"
#       relabelings:
#         - targetLabel: __param_target
#           replacement: "{{ item }}"
#         - sourceLabels: [__param_target]
#           targetLabel: instance
#         - targetLabel: __address__
#           replacement: "ipmi-exporter.{{ baremetal_observability_namespace }}.svc.cluster.local:9290"
#   loop: "{{ bmc_endpoints }}"
#
# - name: Create service monitor for ipmi exporter
#   kubernetes.core.k8s:
#     state: present
#     definition:
#       apiVersion: monitoring.coreos.com/v1
#       kind: ServiceMonitor
#       metadata:
#         name: ipmi-service-monitor
#         namespace: "{{ baremetal_observability_namespace }}"
#       spec:
#         selector:
#           matchLabels:
#             app: ipmi-exporter
#         namespaceSelector:
#           matchNames:
#             - "{{ baremetal_observability_namespace }}"
#         endpoints: "{{ servicemonitor_endpoints }}"
